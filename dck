#!/bin/bash

PHP_COMMANDS=(
    'php'
    'composer'
    'artisan'
)

NODE_COMMANDS=(
    'node'
    'npm'
)

MYSQL_COMMANDS=(
    'mysql'
)

COMMANDS=("${PHP_COMMANDS[@]}" "${NODE_COMMANDS[@]}" "${MYSQL_COMMANDS[@]}")

# If no command was given, list all available commands
if [ $# -eq 0 ]; then
    echo "Available commands:"

    for COMMAND in "${COMMANDS[@]}"; do
        echo "$COMMAND"
    done
    exit 0
fi

COMMAND="$1"
CONTAINER=""

for PHP_COMMAND in "${PHP_COMMANDS[@]}"; do
    if [ "$COMMAND" = "$PHP_COMMAND" ]; then
        CONTAINER="php"
        break
    fi
done

if [ -z "$CONTAINER" ]; then
    for NODE_COMMAND in "${NODE_COMMANDS[@]}"; do
        if [ "$COMMAND" = "$NODE_COMMAND" ]; then
            CONTAINER="node"
            break
        fi
    done
fi

if [ -z "$CONTAINER" ]; then
    for MYSQL_COMMAND in "${MYSQL_COMMANDS[@]}"; do
        if [ "$COMMAND" = "$MYSQL_COMMAND" ]; then
            CONTAINER="mysql"
            break
        fi
    done
fi

if [ -z "$CONTAINER" ]; then
    echo "Command not recognized."
    exit 1
fi

# If command is 'artisan', change COMMAND to 'php artisan'
if [ "$COMMAND" = "artisan" ]; then
    COMMAND="php artisan"
elif [ "$COMMAND" = "mysql" ]; then
    COMMAND="mysql -uroot -proot"
fi

docker compose exec $CONTAINER $COMMAND "${@:2}"
